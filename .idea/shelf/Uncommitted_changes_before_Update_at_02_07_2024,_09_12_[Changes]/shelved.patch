Index: app/src/main/java/org/dci/walletapp/JsonFilesOperations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.dci.walletapp;\nimport android.content.Context;\nimport android.util.Log;\n\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\n\npublic class JsonFilesOperations {\n\n\n    public void write(Context context, Transaction transaction) {\n        String userString = convertTransaction(transaction).toString();\n\n        File file = new File(context.getFilesDir(), \"transactions.json\");\n\n        try (FileWriter fileWriter = new FileWriter(file);\n             BufferedWriter bufferedWriter = new BufferedWriter(fileWriter)) {\n            bufferedWriter.write(userString);\n\n        } catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n        Log.d(\"tetjson\", file.getAbsolutePath());\n    }\n\n    private JSONObject convertTransaction(Transaction transaction) {\n        JSONObject jsonObject = new JSONObject();\n        try {\n            jsonObject.put(\"isIncome\", String.valueOf(transaction.isIncome()));\n            jsonObject.put(\"amount\", transaction.getAmount());\n            jsonObject.put(\"dateTime\", transaction.getDateTime());\n            jsonObject.put(\"incomeSource\", transaction.getSource());\n            jsonObject.put(\"description\", transaction.getDescription());\n        } catch (JSONException e) {\n            throw new RuntimeException(e);\n        }\n\n        return jsonObject;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/org/dci/walletapp/JsonFilesOperations.java b/app/src/main/java/org/dci/walletapp/JsonFilesOperations.java
--- a/app/src/main/java/org/dci/walletapp/JsonFilesOperations.java	
+++ b/app/src/main/java/org/dci/walletapp/JsonFilesOperations.java	
@@ -7,6 +7,7 @@
 
 import java.io.BufferedWriter;
 import java.io.File;
+import java.io.FileOutputStream;
 import java.io.FileWriter;
 import java.io.IOException;
 
@@ -18,9 +19,8 @@
 
         File file = new File(context.getFilesDir(), "transactions.json");
 
-        try (FileWriter fileWriter = new FileWriter(file);
-             BufferedWriter bufferedWriter = new BufferedWriter(fileWriter)) {
-            bufferedWriter.write(userString);
+        try (FileOutputStream fos = new FileOutputStream(file){
+            fos.
 
         } catch (IOException e) {
             throw new RuntimeException(e);
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n  <component name=\"ProjectRootManager\" version=\"2\" default=\"true\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" default="true">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="jbr-17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
